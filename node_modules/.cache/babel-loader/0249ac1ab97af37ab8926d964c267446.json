{"ast":null,"code":"var _jsxFileName = \"/home/amalsan/Github/Typerex/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { gql } from \"apollo-boost\";\nimport ApolloClient from 'apollo-boost';\nimport App from 'App';\nconst client = new ApolloClient({\n  uri: 'https://48p1r2roz4.sse.codesandbox.io'\n});\nclient.query({\n  query: gql`\n      {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n}).then(result => console.log(result));\n\nconst Root = () => /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, \"My first Apollo app \\uD83D\\uDE80\"), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n})));\n\nrender( /*#__PURE__*/React.createElement(Root, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/amalsan/Github/Typerex/src/index.js"],"names":["React","render","ApolloProvider","gql","ApolloClient","App","client","uri","query","then","result","console","log","Root","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAIAD,MAAM,CACHE,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAI;;;;;;;AADN,CADT,EAUGM,IAVH,CAUQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVlB;;AAWA,MAAMG,IAAI,GAAG,mBACX,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,CADF;;AASAL,MAAM,eAAC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAWa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX,CAAN","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { gql } from \"apollo-boost\";\nimport ApolloClient from 'apollo-boost';\nimport App from 'App'\n\nconst client = new ApolloClient({\n  uri: 'https://48p1r2roz4.sse.codesandbox.io',\n});\n\nclient\n  .query({\n    query: gql`\n      {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\nconst Root = () => (\n  <ApolloProvider client={client}>\n    <div>\n      <h2>My first Apollo app ðŸš€</h2>\n      <App  />\n    </div>\n  </ApolloProvider>\n);\n\nrender(<Root />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}