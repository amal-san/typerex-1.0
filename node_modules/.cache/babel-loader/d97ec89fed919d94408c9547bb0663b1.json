{"ast":null,"code":"import { Query } from '@apollo/react-components';\nimport { gql } from 'apollo-boost';\nimport React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/'\n});\n\nclass Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  login(cb) {\n    this.authenticated = true;\n    cb();\n  }\n\n  async userInfo() {\n    const result = await client.query({\n      query: gql`\n\t\t     {\n\t\t\t  userInfo(username:\"amalsn\"){\n\t\t\t    username\n\t\t\t    wpm\n\t\t\t  }\n\t\t\t }\n\t\t    `\n    }).then(function (result) {\n      return result;\n    });\n    return result;\n    console.log(result);\n  }\n\n  logout(cb) {\n    this.authenticated = false;\n    cb();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n\n}\n\nconst USERINFO = gql`\n{\n  userInfo(username:\"amalsan\"){\n    username\n    wpm\n  }\n}`; // const USERUPDATE;\n// const USERDELETE; \n// const USERADD;\n// const USERLIST;\n\nexport default new Auth();","map":{"version":3,"sources":["/home/amalsan/Github/Typerex/src/Components/auth.js"],"names":["Query","gql","React","ApolloProvider","ApolloClient","client","uri","Auth","constructor","authenticated","login","cb","userInfo","result","query","then","console","log","logout","isAuthenticated","USERINFO"],"mappings":"AAAA,SAASA,KAAT,QAAsB,0BAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAKA,MAAMC,MAAM,GAAG,IAAID,YAAJ,CAAiB;AAC9BE,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAMA,MAAMC,IAAN,CAAW;AAEVC,EAAAA,WAAW,GAAE;AACZ,SAAKC,aAAL,GAAqB,KAArB;AACA;;AAEDC,EAAAA,KAAK,CAACC,EAAD,EAAK;AACT,SAAKF,aAAL,GAAqB,IAArB;AACAE,IAAAA,EAAE;AACF;;AAED,QAAMC,QAAN,GAAiB;AAChB,UAAMC,MAAM,GAAG,MAAMR,MAAM,CACxBS,KADkB,CACZ;AACLA,MAAAA,KAAK,EAAEb,GAAI;;;;;;;;AADN,KADY,EAWlBc,IAXkB,CAWb,UAASF,MAAT,EAAiB;AACtB,aAAOA,MAAP;AACA,KAbkB,CAArB;AAcA,WAAOA,MAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA;;AAGDK,EAAAA,MAAM,CAACP,EAAD,EAAK;AACV,SAAKF,aAAL,GAAqB,KAArB;AACAE,IAAAA,EAAE;AACF;;AAEDQ,EAAAA,eAAe,GAAG;AACjB,WAAO,KAAKV,aAAZ;AACA;;AAtCS;;AA4CX,MAAMW,QAAQ,GAAGnB,GAAI;;;;;;EAArB,C,CASA;AAGA;AAGA;AAGA;;AAGA,eAAe,IAAIM,IAAJ,EAAf","sourcesContent":["import { Query } from '@apollo/react-components';\nimport { gql } from 'apollo-boost';\nimport React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\n\n\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n});\n\n\n\nclass Auth {\n\n\tconstructor(){\n\t\tthis.authenticated = false;\n\t}\n\n\tlogin(cb) {\n\t\tthis.authenticated = true;\n\t\tcb()\n\t}\n\n\tasync userInfo() {\n\t\tconst result = await client\n\t\t  .query({\n\t\t    query: gql`\n\t\t     {\n\t\t\t  userInfo(username:\"amalsn\"){\n\t\t\t    username\n\t\t\t    wpm\n\t\t\t  }\n\t\t\t }\n\t\t    `\n\t\t  })\n\t\t  .then(function(result) {\n\t\t  \treturn result;\n\t\t  });\n\t\treturn result;\n\t\tconsole.log(result)\n\t}\n\n\n\tlogout(cb) {\n\t\tthis.authenticated = false;\n\t\tcb()\n\t}\n\n\tisAuthenticated() {\n\t\treturn this.authenticated;\n\t}\n\n\n}\n\n\nconst USERINFO = gql`\n{\n  userInfo(username:\"amalsan\"){\n    username\n    wpm\n  }\n}`\n\n\n// const USERUPDATE;\n\n\n// const USERDELETE; \n\n\n// const USERADD;\n\n\n// const USERLIST;\n\n\nexport default new Auth();"]},"metadata":{},"sourceType":"module"}